{"ast":null,"code":"var _jsxFileName = \"/home/stanislau/react_tasks/calendar/src/components/Calendar.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day\",\n      children: this.props.day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    this.state = {\n      date: new Date()\n    };\n  }\n\n  componentDidMount() {}\n\n  getNumberOfDays(dateObject) {\n    let dateToChange = new Date(dateObject);\n    let number = dateToChange.getDate();\n    dateToChange.setDate(dateToChange.getDate() + 1);\n\n    while (dateToChange.getMonth() === dateObject.getMonth()) {\n      number++;\n      dateToChange.setDate(dateToChange.getDate() + 1);\n    }\n\n    return number;\n  }\n\n  getDaysArray(daysInMonth) {\n    let daysArray = [];\n\n    for (let i = 1; i <= daysInMonth; i++) {\n      let ithDay = new Date(this.state.date);\n      ithDay.setDate(i);\n      daysArray.push(ithDay);\n    }\n\n    return daysArray;\n  }\n\n  getWeeksArray(daysArray) {\n    let d = 0; //days counter\n\n    let weeksArray = [];\n    let actualDay = daysArray[d];\n    let firstWeek = new Array(actualDay.getDay() + 1).fill(null);\n\n    while (actualDay.getDay() <= 6) {\n      firstWeek.push(actualDay);\n      d++;\n      actualDay = daysArray[d];\n    }\n\n    weeksArray.push(firstWeek);\n\n    while (d < daysArray.length) {\n      let week = new Array(7).fill().map(function () {\n        if (d < daysArray.length) {\n          actualDay = daysArray[d];\n          d++;\n          return actualDay;\n        } else {\n          d++;\n          return null;\n        }\n      });\n      weeksArray.push(week);\n    }\n\n    return weeksArray;\n  }\n\n  render() {\n    let day = this.state.date.getDate();\n    let month = this.state.date.getMonth();\n    let year = this.state.date.getFullYear();\n    let daysInMonth = this.getNumberOfDays(this.state.date);\n    let daysArray = this.getDaysArray(daysInMonth);\n    let weeksArray = this.getWeeksArray(daysArray);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-calendar\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: weeksArray.map(week => {\n            /*#__PURE__*/\n            _jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Day, {\n                  day: week[0] ? week[0].getDate() : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Day, {\n                  day: week[1] ? week[1].getDate() : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Day, {\n                  day: week[2] ? week[2].getDate() : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Day, {\n                  day: week[3] ? week[3].getDate() : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Day, {\n                  day: week[4] ? week[4].getDate() : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Day, {\n                  day: week[5] ? week[5].getDate() : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Day, {\n                  day: week[6] ? week[6].getDate() : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/home/stanislau/react_tasks/calendar/src/components/Calendar.js"],"names":["React","Day","Component","constructor","props","state","render","day","Calendar","months","date","Date","componentDidMount","getNumberOfDays","dateObject","dateToChange","number","getDate","setDate","getMonth","getDaysArray","daysInMonth","daysArray","i","ithDay","push","getWeeksArray","d","weeksArray","actualDay","firstWeek","Array","getDay","fill","length","week","map","month","year","getFullYear"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Day extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    render() {\n        return  <div className=\"day\">{this.props.day}</div> ;\n    }\n}\n\nclass Calendar extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            date: new Date(),\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n    ]\n\n\n    getNumberOfDays(dateObject) {\n        let dateToChange = new Date(dateObject);\n        let number = dateToChange.getDate();\n        dateToChange.setDate(dateToChange.getDate() + 1);\n        while (dateToChange.getMonth() === dateObject.getMonth()) {\n            number++;\n            dateToChange.setDate(dateToChange.getDate() + 1);\n        }\n        return number;\n    }\n\n    getDaysArray(daysInMonth) {\n        let daysArray = [];\n        for (let i = 1; i <= daysInMonth; i++) {\n            let ithDay = new Date(this.state.date);\n            ithDay.setDate(i);\n            daysArray.push(ithDay);\n        }\n        return daysArray;\n    }\n\n    getWeeksArray(daysArray) {\n        let d = 0; //days counter\n        let weeksArray = [];\n        let actualDay = daysArray[d];\n        let firstWeek = new Array(actualDay.getDay()+1).fill(null);\n        while(actualDay.getDay() <= 6) {\n            firstWeek.push(actualDay);\n            d++;\n            actualDay = daysArray[d];\n        }\n        weeksArray.push(firstWeek);\n        while(d < daysArray.length) {\n            let week = new Array(7).fill().map(function() {\n                if (d < daysArray.length) {\n                    actualDay = daysArray[d];\n                    d++;\n                    return actualDay;\n                } else {\n                    d++;\n                    return null;\n                }\n            });\n            weeksArray.push(week);\n        }\n        return weeksArray;\n    }\n\n    \n    render() {\n        let day = this.state.date.getDate();\n        let month = this.state.date.getMonth();\n        let year = this.state.date.getFullYear();\n        let daysInMonth = this.getNumberOfDays(this.state.date);\n        let daysArray = this.getDaysArray(daysInMonth);\n        let weeksArray = this.getWeeksArray(daysArray);\n        return (\n            <div className=\"calendar\">\n            <table className=\"table-calendar\">\n            <tbody>\n                { \n                    weeksArray.map(week => {\n                        <tr>\n                            <td><Day day={week[0] ? week[0].getDate() : null}/></td>\n                            <td><Day day={week[1] ? week[1].getDate() : null}/></td>\n                            <td><Day day={week[2] ? week[2].getDate() : null}/></td>\n                            <td><Day day={week[3] ? week[3].getDate() : null}/></td>\n                            <td><Day day={week[4] ? week[4].getDate() : null}/></td>\n                            <td><Day day={week[5] ? week[5].getDate() : null}/></td>\n                            <td><Day day={week[6] ? week[6].getDate() : null}/></td>\n                        </tr>\n                        })\n                }\n                </tbody>\n            </table>\n            </div>\n        )\n    }\n\n}\n\nexport default Calendar"]},"metadata":{},"sourceType":"module"}