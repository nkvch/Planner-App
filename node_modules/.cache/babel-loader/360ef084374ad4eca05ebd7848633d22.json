{"ast":null,"code":"var _jsxFileName = \"/home/stanislau/react_tasks/calendar/frontend/src/components/Calendar.js\";\nimport React from 'react';\nimport Day from '../components/Day';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let date = new Date();\n    let day = date.getDate();\n    let month = date.getMonth();\n    let year = date.getFullYear();\n    let daysInMonth = this.getNumberOfDays(date);\n    let daysArray = this.getDaysArray(daysInMonth, date);\n    let weeksArray = this.getWeeksArray(daysArray);\n    this.state = {\n      date: date,\n      day: day,\n      month: month,\n      year: year,\n      daysInMonth: daysInMonth,\n      daysArray: daysArray,\n      weeksArray: weeksArray\n    };\n  }\n\n  componentDidMount() {}\n\n  getNumberOfDays(dateObject) {\n    let dateToChange = new Date(dateObject);\n    let number = dateToChange.getDate();\n    dateToChange.setDate(dateToChange.getDate() + 1);\n\n    while (dateToChange.getMonth() === dateObject.getMonth()) {\n      number++;\n      dateToChange.setDate(dateToChange.getDate() + 1);\n    }\n\n    return number;\n  }\n\n  getDaysArray(daysInMonth, date) {\n    let daysArray = [];\n\n    for (let i = 1; i <= daysInMonth; i++) {\n      let ithDay;\n\n      if (i != date.getDate()) {\n        ithDay = new Date(date);\n        ithDay.setDate(i);\n      } else {\n        ithDay = date;\n      }\n\n      daysArray.push(ithDay);\n    }\n\n    return daysArray;\n  }\n\n  getWeeksArray(daysArray) {\n    let d = 0; //days counter\n\n    let weeksArray = [];\n    let actualDay = daysArray[d];\n    console.log(actualDay);\n    let firstWeek = new Array(actualDay.getDay()).fill(null);\n\n    while (firstWeek.length < 7) {\n      firstWeek.push(actualDay);\n      d++;\n      console.log(d);\n      actualDay = daysArray[d];\n    }\n\n    weeksArray.push(firstWeek);\n\n    while (d < daysArray.length) {\n      let week = new Array(7).fill().map(function () {\n        if (d < daysArray.length) {\n          actualDay = daysArray[d];\n          d++;\n          return actualDay;\n        } else {\n          d++;\n          return null;\n        }\n      });\n      weeksArray.push(week);\n    }\n\n    return weeksArray;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-and-year\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-name\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: this.months[this.state.month]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-name\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: this.state.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-calendar\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"week-days\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"weekend\",\n              children: \"Sun\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Mon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Tue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Wed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Thu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Fri\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"weekend\",\n              children: \"Sat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.weeksArray.map(week => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [0, 1, 2, 3, 4, 5, 6].map(i => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Day, {\n                day: week[i] ? week[i].getDate() : null,\n                isToday: week[i] === this.state.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/home/stanislau/react_tasks/calendar/frontend/src/components/Calendar.js"],"names":["React","Day","Calendar","Component","constructor","props","months","date","Date","day","getDate","month","getMonth","year","getFullYear","daysInMonth","getNumberOfDays","daysArray","getDaysArray","weeksArray","getWeeksArray","state","componentDidMount","dateObject","dateToChange","number","setDate","i","ithDay","push","d","actualDay","console","log","firstWeek","Array","getDay","fill","length","week","map","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Day from '../components/Day'\n\n\nclass Calendar extends React.Component{\n    constructor(props) {\n        super(props);\n        let date = new Date();\n        let day = date.getDate();\n        let month = date.getMonth();\n        let year = date.getFullYear();\n        let daysInMonth = this.getNumberOfDays(date);\n        let daysArray = this.getDaysArray(daysInMonth, date);\n        let weeksArray = this.getWeeksArray(daysArray);\n        this.state = {\n            date: date,\n            day: day,\n            month: month,\n            year: year,\n            daysInMonth: daysInMonth,\n            daysArray: daysArray,\n            weeksArray: weeksArray,\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n    ]\n\n\n    getNumberOfDays(dateObject) {\n        let dateToChange = new Date(dateObject);\n        let number = dateToChange.getDate();\n        dateToChange.setDate(dateToChange.getDate() + 1);\n        while (dateToChange.getMonth() === dateObject.getMonth()) {\n            number++;\n            dateToChange.setDate(dateToChange.getDate() + 1);\n        }\n        return number;\n    }\n\n    getDaysArray(daysInMonth, date) {\n        let daysArray = [];\n        for (let i = 1; i <= daysInMonth; i++) {\n            let ithDay;\n            if (i != date.getDate()) {\n                ithDay = new Date(date);\n                ithDay.setDate(i);\n            } else {\n                ithDay = date;\n            }\n            daysArray.push(ithDay);\n        }\n        return daysArray;\n    }\n\n    getWeeksArray(daysArray) {\n        let d = 0; //days counter\n        let weeksArray = [];\n        let actualDay = daysArray[d];\n        console.log(actualDay);\n        let firstWeek = new Array(actualDay.getDay()).fill(null);\n        while(firstWeek.length < 7) {\n            firstWeek.push(actualDay);\n            d++;\n            console.log(d);\n            actualDay = daysArray[d];\n        }\n        weeksArray.push(firstWeek);\n        while(d < daysArray.length) {\n            let week = new Array(7).fill().map(function() {\n                if (d < daysArray.length) {\n                    actualDay = daysArray[d];\n                    d++;\n                    return actualDay;\n                } else {\n                    d++;\n                    return null;\n                }\n            });\n            weeksArray.push(week);\n        }\n        return weeksArray;\n    }\n\n    \n    render() {\n\n        return (\n            <div className=\"calendar\">\n            <div className=\"month-and-year\">\n                <div className=\"month-name\"><h1>{this.months[this.state.month]}</h1></div>\n                <div className=\"year-name\"><h1>{this.state.year}</h1></div>\n            </div>\n            <table className=\"table-calendar\">\n            <thead>\n                <tr className=\"week-days\">\n                    <td className=\"weekend\">Sun</td>\n                    <td>Mon</td>\n                    <td>Tue</td>\n                    <td>Wed</td>\n                    <td>Thu</td>\n                    <td>Fri</td>\n                    <td className=\"weekend\">Sat</td>\n                </tr>\n            </thead>\n            <tbody>\n                { \n                    this.state.weeksArray.map(week => \n                        <tr>\n                            {\n                                [0,1,2,3,4,5,6].map(i => \n                                <td>\n                                    <Day day={week[i] ? week[i].getDate() : null} isToday={week[i] === this.state.date}/>\n                                </td>\n                                )\n                            }\n                        </tr>\n                        )\n                }\n            </tbody>\n            </table>\n            </div>\n        )\n    }\n\n}\n\nexport default Calendar"]},"metadata":{},"sourceType":"module"}